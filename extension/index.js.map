{"mappings":"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","sources":["src/extension/index.extension.ts","src/extension/utils.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/extension/replicants.ts","src/extension/queue.ts","node_modules/@swc/helpers/esm/_object_spread.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_object_spread_props.js","src/extension/listeners.ts","src/common/listeners.ts"],"sourcesContent":["import type NodeCG from '@nodecg/types';\nimport { storeNodeCG } from './utils';\n\nmodule.exports = function (nodecg: NodeCG.ServerAPI) {\n\tstoreNodeCG(nodecg);\n\tconst replicants = require(\"./replicants\");\n\n\tconst queue = require(\"./queue\");\n\tconst listeners = require(\"./listeners\");\n};\n","import type NodeCG from '@nodecg/types';\nimport type { Configschema } from '../types/schemas';\n\nlet nodecg: NodeCG.ServerAPI<Configschema>;\n\nexport function storeNodeCG(ncg: NodeCG.ServerAPI<Configschema>) {\n    nodecg = ncg;\n}\n\nexport function getNodeCG(): NodeCG.ServerAPI<Configschema> {\n    return nodecg;\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import NodeCG from \"@nodecg/types\";\nimport { getNodeCG } from \"./utils\";\nimport { Bank, Pools, Queue, Current } from \"types/schemas\";\n\nconst nodecg = getNodeCG();\nexport const bank = nodecg.Replicant(\"bank\") as unknown as NodeCG.ServerReplicantWithSchemaDefault<Bank>;\nexport const pools = nodecg.Replicant(\"pools\") as unknown as NodeCG.ServerReplicantWithSchemaDefault<Pools>;\nexport const queue = nodecg.Replicant(\"queue\") as unknown as NodeCG.ServerReplicantWithSchemaDefault<Queue>;\nexport const current = nodecg.Replicant(\"current\") as unknown as NodeCG.ServerReplicantWithSchemaDefault<Current>;","import type NodeCG from '@nodecg/types';\nimport { MsgRef, Message } from 'types/schemas';\nimport { current, pools, bank, queue } from \"./replicants\";\nimport { getNodeCG } from './utils';\n\nconst QUEUE_LEN = 12;\nconst DISPLAY_TIME = 5000;\nconst nodecg = getNodeCG();\n\nfunction lastQueued(time: number) {\n    const nextTime = current.value.endTime;\n    const times: { [id: string]: number } = {};\n    queue.value.msgs.forEach((ref, i) => {\n        times[ref.id] = nextTime + DISPLAY_TIME * i;\n    });\n    return times;\n}\n\nfunction pickNext(time: number) {\n    const lastQueuedTimes = lastQueued(time);\n    var maxRef: MsgRef | undefined;\n    var maxMsg: Message | undefined;\n    var maxPriority = 0;\n    for (const pool of Object.values(pools.value)) {\n        for (const ref of pool.msgs) {\n            const msg = bank.value[ref.id];\n            const age = lastQueuedTimes[ref.id] || msg.lastShown || time - 5 * 60 * 10000;\n            const timeSince = (time - age) / 1000;\n            const weight = pool.priority * msg.priority * timeSince;\n\n            if (maxPriority < weight) {\n                maxPriority = weight;\n                maxRef = ref;\n                maxMsg = msg;\n            }\n        }\n    }\n    return maxRef;\n}\n\n// Add new to queue when below min length\nqueue.on(\"change\", (val) => {\n    while (val.msgs.length < QUEUE_LEN) {\n        const dispTime = Date.now() + DISPLAY_TIME * (val.msgs.length + 1);\n        const next = pickNext(dispTime);\n        if (next) {\n            nodecg.log.info(\"Queueing\", next);\n            val.msgs.push({ id: next.id, time: Date.now() })\n        }\n    }\n});\n\n// Keep current msg text up to date with bank\nbank.on(\"change\", (val) => {\n    if (current.value && current.value.msgID) {\n        const currRef = current.value.msgID;\n        const bankMsg = bank.value[currRef];\n        if (!bankMsg) return;\n        if (current.value.text !== bankMsg.text) {\n            current.value.text = bankMsg.text;\n        }\n    }\n});\n\nvar interval: NodeJS.Timeout;\nfunction playNext() {\n    nodecg.log.info(\"Moving to next donation\");\n    if (queue.value.msgs) {\n        const newRef = queue.value.msgs[0];\n        if (!newRef) return nodecg.log.warn(\"Reading null value on queue\");\n        const newMsg = bank.value[newRef.id];\n        if (!newMsg) return nodecg.log.warn(\"No message found for ref\", newRef.id);\n        current.value = {\n            ...current.value,\n            text: newMsg.text,\n            msgID: newRef.id,\n            endTime: Date.now() + DISPLAY_TIME,\n            time: newRef.time\n        }\n        queue.value.msgs.splice(0, 1);\n    }\n    clearInterval(interval);\n    interval = setInterval(playNextPause, DISPLAY_TIME);\n}\n\nfunction playNextPause() {\n    if (!current.value.pause) playNext();\n}\n\nconst now = Date.now();\nif (!current.value.pause && current.value.endTime < now) playNext();","import { _define_property } from \"./_define_property.js\";\n\nexport function _object_spread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(\n                Object.getOwnPropertySymbols(source).filter(function(sym) {\n                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n                })\n            );\n        }\n\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n\n    return target;\n}\nexport { _object_spread as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n}\nexport function _object_spread_props(target, source) {\n    source = source != null ? source : {};\n\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n\n    return target;\n}\nexport { _object_spread_props as _ };\n","import { getNodeCG } from \"./utils\";\nimport { current, pools, bank, queue } from \"./replicants\";\n\nimport { Pool, Queue, MsgRef, Message } from \"types/schemas\";\nimport NodeCG from \"@nodecg/types\";\nimport { listenTo, sendError } from \"../common/listeners\";\nimport type * as LT from \"../common/listenerTypes\";\nconst nodecg = getNodeCG();\n\n// Utilities\nfunction genID(prefix: string, exclusions: string[]) {\n    var id;\n    do {\n        id = `${prefix}-${Math.floor(Math.random() * 100000000)}`;\n    } while (exclusions.includes(id));\n    return id;\n}\n\nfunction findMsgIDIndex(pool: Pool, id: string | null | undefined) {\n    if (!id) return -1;\n    return pool.msgs.findIndex(m => m.id === id);\n}\n\nfunction findMsgRefIndex(pool: Pool, ref: MsgRef | null | undefined) {\n    if (!ref) return -1;\n    return pool.msgs.findIndex(m => m.id === ref.id && m.time === ref.time);\n}\n\nfunction findQueueMsgIDIndexes(queue: Queue, id: string | null | undefined) {\n    if (!id) return [];\n    const pred = (m: MsgRef) => m.id === id;\n    return queue.msgs.reduce<number[]>((m, e, i) => pred(e) ? [...m, i] : m, []);\n}\nconst findQueueMsgRefIndex = findMsgRefIndex;\n\n\n// Pools\nconst defaultPool: () => Pool = () => { return { name: \"New Pool\", priority: 0, msgs: [] } }\nlistenTo(\"addPool\", () => {\n    const id = genID(\"pool\", Object.keys(pools.value));\n    pools.value[id] = defaultPool();\n})\nlistenTo(\"removePool\", ({ pid }, ack) => {\n    const pool: Pool = pools.value[pid];\n    if (!pool) return sendError(ack, \"Pool does not exist\");\n    if (!pool.msgs) return sendError(ack, \"Empty pool before deleting\");\n    delete pools.value[pid];\n})\n\nfunction removeFromPool(ref: MsgRef | string, pool: Pool) {\n    const ind = typeof ref === \"string\" ? findMsgIDIndex(pool, ref) : findMsgRefIndex(pool, ref);\n    if (ind === -1) return null;\n    const [rem] = pool.msgs.splice(ind, 1);\n    return rem;\n}\n\nfunction addToPool(ref: MsgRef, pool: Pool, before: MsgRef | null) {\n    if (before === null) pool.msgs.push(ref);\n    else {\n        const dstIndex = findQueueMsgRefIndex(pool, before);\n        // Fallback to add to end\n        if (dstIndex === -1) return addToPool(ref, pool, null);\n        pool.msgs.splice(dstIndex, 0, ref);\n    }\n    return true;\n}\n\nfunction movePool(source: Pool, dest: Pool, mid: MsgRef, before: MsgRef | null) {\n    const elem = removeFromPool(mid, source);\n    if (!elem) return false;\n    return addToPool(elem, dest, before);\n};\n\n// Messages\nconst defaultMsg: () => Message = () => { return { text: \"New Message\", priority: 0 } }\n\nlistenTo(\"addMessage\", ({ pid, before }, ack) => {\n    const pool: Pool = pid === \"queue\" ? queue.value : pools.value[pid];\n    if (!pool) return sendError(ack, \"Pool does not exist\");\n\n    const temp = pid === \"queue\";\n    const id = genID(temp ? \"temp\" : \"msg\", Object.keys(bank));\n    const msg: Message = defaultMsg();\n    if (temp) msg.type = \"temp\";\n\n    bank.value[id] = msg;\n    addToPool({ id: id }, pool, before);\n})\n\nlistenTo(\"removeMessage\", ({ mid }, ack) => {\n    if (!(mid in bank.value)) return sendError(ack, \"Message does not exist\");\n    Object.values(pools.value).forEach(pool => removeFromPool(mid, pool));\n    queue.value.msgs = queue.value.msgs.filter(m => m.id !== mid);\n    delete bank.value[mid];\n})\n\nlistenTo(\"movePool\", ({ aref: mid, oldpid, newpid, before }) => {\n    movePool(pools.value[oldpid], pools.value[newpid], mid, before);\n});\n\n// Queue\nlistenTo(\"reorderQueue\", ({ aref: mid, before }) => movePool(queue.value, queue.value, mid, before));\nlistenTo(\"enqueue\", ({ mid, before }) => (addToPool({ id: mid, time: Date.now() }, queue.value, before)));\nlistenTo(\"dequeue\", ({ aref }) => removeFromPool(aref, queue.value));\nlistenTo(\"skipTo\", ({ aref }) => {\n    const index = findQueueMsgRefIndex(queue.value, aref);\n    if (index === -1) return;\n    queue.value.msgs.splice(0, index);\n})\nlistenTo(\"unlink\", ({ aref }) => {\n    const oldMsg = bank.value[aref.id];\n    const newID = genID(\"temp\", Object.keys(bank.value));\n    bank.value[newID] = {\n        \"text\": oldMsg.text,\n        \"priority\": oldMsg.priority,\n        \"type\": \"temp\"\n    }\n    const index = findQueueMsgRefIndex(queue.value, aref);\n    queue.value.msgs[index] = { id: newID, time: Date.now() };\n})","import NodeCG from \"@nodecg/types\";\nimport { MsgRef } from \"types/schemas\";\nimport { LTs } from \"./listenerTypes\";\nimport { getNodeCG } from \"../extension/utils\";\nimport { NodeCGAPIClient } from \"@nodecg/types/client/api/api.client\";\n\nvar ncg: NodeCGAPIClient | NodeCG.ServerAPI;\ndeclare var nodecg: NodeCGAPIClient;\ntry {\n    ncg = nodecg;\n} catch {\n    ncg = getNodeCG();\n}\n\ntype Listener<T> = (data: T, ack: NodeCG.Acknowledgement | undefined) => void;\n\nexport function sendError(ack: NodeCG.Acknowledgement | undefined, msg: string) {\n    if (ack && !ack.handled) ack(new Error(msg));\n}\n\nexport function sendSuccess<T>(ack: NodeCG.Acknowledgement | undefined, value: T) {\n    if (ack && !ack.handled) ack(null, value);\n}\n\nexport function listenTo<T extends keyof LTs>(name: T, listener: Listener<LTs[T]>) {\n    ncg.listenFor(name, (data, ack) => {\n        console.debug(\"Calling\", name, \"with\", data);\n        listener(data, ack);\n    })\n}\n\n\nexport function sendToF<T extends keyof LTs>(name: T, data: LTs[T]) {\n    return () => {\n        console.debug(\"Sending\", name, \"with\", data);\n        ncg.sendMessage(name, data);\n    }\n}\n\nexport function sendTo<T extends keyof LTs>(name: T, data: LTs[T]) {\n    sendToF(name, data)();\n}\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../"}